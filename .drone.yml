kind: pipeline
name: default

steps:
- name: drone-test
  image: golang:1.10-alpine
  environment:
    COVER_STRICT: "true"
    CGO_ENABLED: 0
    GOOS: "linux"
    GOARCH: "amd64"
  commands:
  - mkdir -p bin
    - . ./scripts/set-env.sh
    - apk update && apk add git

    - go get ./...
    - go build
    - ./depcharge -f -- go get {{get}}

    - export VERSION=$(echo $CI_COMMIT_SHA| cut -c1-7)
    - export VERSION=$(if [ -z $CI_COMMIT_TAG ]; then echo $VERSION ; else echo $CI_COMMIT_TAG.$VERSION; fi)
    - echo -n $VERSION | tee VERSION.txt
    - echo

    - > # Test for gofmt smells
      if [[ $(gofmt -s -d *.go) ]]; then
        gofmt -s -d *.go
        echo "gofmt changes detected"
        exit -1
      fi

    # Test for golint smells
    - ./bin/golint -set_exit_status
    
    # Generate code coverage report
    - . ./scripts/create-coverage.sh

    # Build linux
    - . ./scripts/set-env.sh
    - export VERSION=$(cat VERSION.txt)
    - if [ -n "${CI_COMMIT_TAG-}" ]; then export EXTRA_FLAGS="-w -s"; fi
    - go build -ldflags="$EXTRA_FLAGS -X main.version=$VERSION" -o depcharge-linux .



# volumes:
# - name: cache
#   host:
#     path: /var/lib/cache

# volumes:
# - name: cache
#   temp: {}